#+STARTUP:indent
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/styles.css"/>
#+HTML_HEAD_EXTRA: <link href='http://fonts.googleapis.com/css?family=Ubuntu+Mono|Ubuntu' rel='stylesheet' type='text/css'>
#+HTML_HEAD_EXTRA: <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js" type="text/javascript"></script>
#+HTML_HEAD_EXTRA: <script src="js/navbar.js" type="text/javascript"></script>
#+OPTIONS: f:nil author:nil num:nil creator:nil timestamp:nil toc:nil html-style:nil

#+TITLE: The Winning Game
#+AUTHOR: X Ellis

#+BEGIN_EXPORT html

    <div class="ribbon">
      <a href="https://github.com/stsb11/9-CS-gameTheory">Fork me on GitHub</a>
    </div>

<div id="stickyribbon">
    <ul>
      <li><a href="1_Lesson.html">Week1</a></li>
      <li><a href="2_Lesson.html">Week2</a></li>
      <li><a href="3_Lesson.html">Week3</a></li>
      <li><a href="4_Lesson.html">Week4</a></li>
      <li><a href="5_Lesson.html">Week5</a></li>
      <li><a href="homework.html">Homework</a></li>
      <li><a href="evaluation.html">Evaluation</a></li>
    </ul>
  </div>


<div id="underlay" onclick="underlayoff()">
</div>
<div id="overlay" onclick="overlayoff()">
</div>
<div id=overlayMenu>
<p onclick="overlayon('hsla(0, 0%, 50%, 0.5)')">Grey overlay</p>
<p onclick="underlayon('hsla(300,100%,50%, 0.3)')">Pink</p>
<p onclick="underlayon('hsla(80, 90%, 40%, 0.4)')">Green</p>
<p onclick="underlayon('hsla(240,100%,50%,0.2)')">Blue</p>
<p onclick="underlayon('hsla(40,100%,50%,0.3)')">Cream</p>
<p onclick="underlayon('hsla(300,100%,40%,0.3)')">Liliac</p>
<p onclick="underlayon('hsla(300,100%,25%,0.3)')">Purple</p>
<p onclick="underlayon('hsla(60,100%,50%,0.3)')">Yellow</p>
</div>
#+END_EXPORT

* COMMENT Use as a template
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:

** Research It
:PROPERTIES:
:HTML_CONTAINER_CLASS: research
:END:

** Design It
:PROPERTIES:
:HTML_CONTAINER_CLASS: design
:END:

** Build It
:PROPERTIES:
:HTML_CONTAINER_CLASS: build
:END:

** Test It
:PROPERTIES:
:HTML_CONTAINER_CLASS: test
:END:

** Run It
:PROPERTIES:
:HTML_CONTAINER_CLASS: run
:END:

** Document It
:PROPERTIES:
:HTML_CONTAINER_CLASS: document
:END:

** Code It
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:

** Program It
:PROPERTIES:
:HTML_CONTAINER_CLASS: program
:END:

** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:

** Badge It
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:

** Save It
:PROPERTIES:
:HTML_CONTAINER_CLASS: save
:END:

* Objectives
:PROPERTIES:
:HTML_CONTAINER_CLASS: objectives
:END:
** Developing the *Information Technology* learning strands, specifically:
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:
+ Understands and can apply payoff matrix in evaluating outcomes
+ Understands and be able to explain Nash equilibium 
+ Understands and be able to explain dominant strategy
* Nash Equilibrium and Dominant Strategy
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:


** Recap - Zero-sum game and Pay-off matrix
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:

- A game is called =zero-sum= if the sum of payoffs equals zero for any outcome. That means that the winnings of the winning players are paid by the losses of the losing players. EXAMPLEs of a zero-sum games include poker, rock-paper-scissors and tennis.
- Game theory attempts to determine mathematically and logically the actions that “players” should take to secure the best outcomes for themselves in a wide array of “games.”  
- A =Payoff matrix= is a table used to illustrate the player moves and the outcomes with each possible moves.


** Learn It - Payoff matrix in real life example
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:
- Considering  two toy companies, A and B.  Their profits depending on their decisions on advertising or not.
- The =payoff matrix= of their decisions is as following:
[[./img/payoff-matrix-advertising.png]]

** Learn It:  Nash Equilibrium
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:
- Suppose two cars are driving towards a junction from perpendicular directions
- The light is green for one and red for the other
- If the police would not ticket the drivers, would they want to break the law?
- To help you understand this scenario and possible outcomes, lets watch a short 4 minutes video:
#+BEGIN_EXPORT html
<iframe width="560" height="315" src="https://www.youtube.com/embed/jILgxeNBK_8" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
#+END_EXPORT

- =A Nash Equilibrium= is a law that no one would want to break even in the absence of external force such as police in the traffic light example or in the ice cream example
- Formally, =Nash Equilibrium= is a state where no players can improve their outcomes by change of strategy as long as others remain unchanged.
** Badge It Silver
:PROPERTIES:
:HTML_CONTAINER_CLASS: silver
:END:
- create a payoff matrix for the following scenario:
  - Two cars are meeting at an intersection and want to proceed as indicated by the arrows in Figure shown below.
    [[./img/TwoCars-Crossing.png]]
 - Each player can proceed or move. If both proceed, there is an accident. A would have a payoff of 100 in this case, and B a payoff of 1000 (since B would be made responsible for the accident, since A has the right of way). If one yields and the other proceeds, the one yielding has a payoff of 5, and the other one of 5. If both yield, it takes a little longer until they can proceed, so both have a payoff of 10.
 - Analyze this simultaneous game, draw the payoff bimatrix
** Badge It Gold - Prisoners' dilemma and Nash equilibrium
:PROPERTIES:
:HTML_CONTAINER_CLASS: gold
:END:
- Explain Nash equilibrium using payoff matrix and Prisoners' dilemma scenario 
** Badge It Platinum
:PROPERTIES:
:HTML_CONTAINER_CLASS: platinum
:END:
- Conduct some research online and write 200 words on:
 - What dominant strategy is
 - Find an example of dominant strategy explain how the dominant strategy works in your example.

